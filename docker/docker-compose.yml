version: '3.8'

services:
  # MongoDB instancia 1 (puerto 27017)
  mongodb1:
    image: mongo:latest
    container_name: mongodb-tfc-1
    ports:
      - "27017:27017"
    volumes:
      - mongodb-data1:/data/db
      - ./init-mongo1.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    networks:
      - app-network
    restart: unless-stopped

  # MongoDB instancia 2 (puerto 27018)
  mongodb2:
    image: mongo:latest
    container_name: mongodb-tfc-2
    ports:
      - "27018:27017"
    volumes:
      - mongodb-data2:/data/db
      - ./init-mongo2.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    networks:
      - app-network
    restart: unless-stopped

  # MongoDB instancia 3 (puerto 27019)
  mongodb3:
    image: mongo:latest
    container_name: mongodb-tfc-3
    ports:
      - "27019:27017"
    volumes:
      - mongodb-data3:/data/db
      - ./init-mongo3.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    networks:
      - app-network
    restart: unless-stopped

  # MariaDB (puerto 3306)
  mariadb:
    image: mariadb:latest
    container_name: umls-db
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: miclave
      MYSQL_DATABASE: umls
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - app-network

  # phpMyAdmin
  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: phpmyadmin
    restart: always
    environment:
      PMA_HOST: mariadb
      PMA_PORT: 3306
      MYSQL_ROOT_PASSWORD: miclave
    ports:
      - "8080:80"
    depends_on:
      - mariadb
    networks:
      - app-network

volumes:
  mongodb-data1:
    name: mongodb-tfc-data1
  mongodb-data2:
    name: mongodb-tfc-data2
  mongodb-data3:
    name: mongodb-tfc-data3
  mysql_data:
    name: umls-db-data

networks:
  app-network:
    driver: bridge 